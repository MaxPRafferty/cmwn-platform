box:
  id: cmwn/platform-api:0.1
  username: $DOCKER_USER
  password: $DOCKER_PASS
  tag: latest

build:
  services:
    - id: mysql:5.5
      env:
        MYSQL_ROOT_PASSWORD: cmwn_pass123
        MYSQL_DATABASE: cmwn_test
        MYSQL_USER: cmwn_user
        MYSQL_PASSWORD: cmwn_pass
  steps:
    - script:
      name: install dependencies
      code: composer install --no-interaction
    - script:
      name: Setup test DB
      code: |-
        sleep 5
        $PWD/vendor/bin/phinx migrate -c $PWD/config/phinx.php -e test
    - script:
      name: PHPCS Check
      code: $PWD/vendor/bin/phpcs --standard=PSR2 -p --no-colors module
    - script:
      name: PHPUNIT
      code: |-
        $PWD/vendor/bin/phpunit -c $PWD/phpunit.xml --stop-on-error --stop-on-failure --colors=never
  after-steps:
    - slack-notifier:
      url: $SLACK_URL

release:
  steps:
    - script:
      name: Init git
      code: |-
        git checkout $WERCKER_GIT_BRANCH
        git config --global user.email hal-9000@changemyworldnow.com
        git config --global user.name "wercker"
        git fetch $GIT_REMOTE
    - script:
      name: Version bump, Changelog and prep
      code: |-
        export VERSION="$($PWD/bin/version_bump.sh --print-current)"
        echo "Bumped version to $VERSION"
        mkdir -p data/build/artifact
        echo "Created directory for artifact"
        $PWD/vendor/bin/swagger $PWD/module -o $PWD/data/docs/swagger.json
    - script:
      name: Running Zend-Tool
      code: /usr/sbin/zfdeploy.php build "data/build/artifact/platform-api-$VERSION.zip" --composer=off --vendor
    - s3sync:
      name: Uploading package to Amazon S3
      key-id: $AWS_ACCESS_KEY_ID
      key-secret: $AWS_SECRET_ACCESS_KEY
      bucket-url: $AWS_BUCKET_URL
      source-dir: data/build/artifact/
      delete-removed: false
    - github-create-release:
      name: Creating release on github
      token: $MC_GITHUB_TOKEN
      tag: $VERSION
    - github-upload-asset:
      name: Adding build artifact to tag
      token: $MC_GITHUB_TOKEN
      tag: $VERSION
      file: data/build/artifact/platform-api-$VERSION.zip
      filename: platform-api-$VERSION.zip

draft-release:
  steps:
    - script:
      name: Preparing release
      code: |-
        export SHORT_HASH=$(git log -n 1 --abbrev-commit | head -n 1 | sed -e 's/^commit //')
        mkdir -p data/build/artifact
        echo "Created directory for artifact"
        $PWD/bin/version_bump.sh --print-current
        export VERSION="$($PWD/bin/version_bump.sh --print-current)-$SHORT_HASH"
        echo "$VERSION"
        $PWD/vendor/bin/swagger $PWD/moduel -o $PWD/data/docs/swagger.json
    - script:
      name: Init git
      code: |-
        git checkout $WERCKER_GIT_BRANCH
        git config --global user.email hal-9000@changemyworldnow.com
        git config --global user.name "wercker"
        git fetch $GIT_REMOTE
    - script:
      name: Running Zend-Tool
      code: /usr/sbin/zfdeploy.php build "data/build/artifact/platform-api-$VERSION.zip" --composer=off --vendor
    - s3sync:
      name: Uploading package to Amazon S3
      key-id: $AWS_ACCESS_KEY_ID
      key-secret: $AWS_SECRET_ACCESS_KEY
      bucket-url: $AWS_BUCKET_URL
      source-dir: data/build/artifact/
      delete-removed: false
    - github-upload-asset:
      name: Adding build artifact to tag
      token: $MC_GITHUB_TOKEN
      tag: $VERSION
      file: data/build/artifact/platform-api-$VERSION.zip
      filename: platform-api-$VERSION.zip

deploy-draft:
  box:
    id: cmwn/python
    username: $DOCKER_USER
    password: $DOCKER_PASS
    entrypoint: /bin/bash -c
  steps:
    - script:
      name: Preparing release
      code: |-
        export SHORT_HASH=$(git log -n 1 --abbrev-commit | head -n 1 | sed -e 's/^commit //')
        $PWD/bin/version_bump.sh --print-current
        export VERSION="$($PWD/bin/version_bump.sh --print-current)-$SHORT_HASH"
    - script:
      name: Installing pips
      code: |-
        pip install boto3
        export DEPLOY='true'
    - script:
      name: Running deploy
      code: |-
        echo "Deploying $DEPLOY_APP_NAME @ $VERSION to $DEPLOY_ENV"
        python /deploy.py $VERSION $DEPLOY_APP_NAME $DEPLOY_ENV -v
  after-steps:
    - slack-notifier:
      url: $SLACK_URL

deploy:
  box:
    id: cmwn/python
    username: $DOCKER_USER
    password: $DOCKER_PASS
    entrypoint: /bin/bash -c
  steps:
    - script:
      name: Preparing release
      code: |-
        export VERSION="$($PWD/bin/version_bump.sh --print-current)"
    - script:
      name: Running deploy
      code: |-
        echo "Deploying $DEPLOY_APP_NAME @ $VERSION to $DEPLOY_ENV"
        python /deploy.py $VERSION $DEPLOY_APP_NAME $DEPLOY_ENV -v
  after-steps:
    - slack-notifier:
      url: $SLACK_URL